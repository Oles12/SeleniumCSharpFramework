using AutoFixture.Xunit2;
using AventStack.ExtentReports;
using EaApplicationTest.Models;
using EaApplicationTest.Pages;
using EaFramework.Config;
using EaFramework.Driver;
using EaFramework.Extensions;
using FluentAssertions;
using OpenQA.Selenium;
using OpenQA.Selenium.Support.UI;
using System.Reflection;
using Xunit.Abstractions;

//using Theory = Xunit.TheoryAttribute;

namespace EaApplicationTest;

[Collection("Test collection")]
public class UnitTest1
{ 
    private readonly IHomePage _homePage;
    private readonly IProductPage _productPage;
    private readonly IDriverFixture _driverFixture;
    
    public UnitTest1(IHomePage homePage, IProductPage productPage, IDriverFixture driverFixture)
    {
        _homePage = homePage;
        _productPage = productPage;
        _driverFixture = driverFixture;
    }
    
    /// <summary>
    /// Creates a new product and verifies that its details are displayed correctly on the product details page.
    /// </summary>
    /// <param name="product">The product data, automatically generated by AutoFixture.</param>
    [Theory]
    [AutoData] // AutoFixture.XUnit2 nuget package that generated data for model
    public void CreateProductAndVerifyDetails(Product product)
    {
        _driverFixture.ExecuteTest(() =>
        {
            var test = _driverFixture.Test;
            _homePage.ClickProduct();
            _productPage.ClickCreateButton(test);
            _productPage.CreateProduct(product, test);
            _productPage.PerformClickOnSpecialValue(product.Name, "Details", test);

            _productPage.GetProductName().Should().Be(product.Name);
        });
    }

    /// <summary>
    /// Creates a product, edits its details, and then verifies that the changes are correctly saved and displayed in the product list.
    /// </summary>
    /// <param name="product">The initial product data, generated by AutoFixture.</param>
    /// <param name="newProduct">The updated product data, generated by AutoFixture.</param>
    [Theory]
    [AutoData]
    public void EditProductAndVerifyChanges(Product product, Product newProduct)
    {
        _driverFixture.ExecuteTest(() =>
        {
            var test = _driverFixture.Test;
            _homePage.ClickProduct();

            // Create a product to edit
            _productPage.ClickCreateButton(test);
            _productPage.CreateProduct(product, test);

            // Edit the product
            _productPage.PerformClickOnSpecialValue(product.Name, "Edit", test);
            _productPage.EditProduct(newProduct, test);

            // Verify the changes
            var editedProduct = _productPage.GetProductFromList(newProduct.Name);

            editedProduct.Should().NotBeNull();
            editedProduct.Name.Should().Be(newProduct.Name);
            editedProduct.Description.Should().Be(newProduct.Description);
            editedProduct.Price.Should().Be(newProduct.Price);
            editedProduct.ProductType.Should().Be(newProduct.ProductType);
        });
    }
}